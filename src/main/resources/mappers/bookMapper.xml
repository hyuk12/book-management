<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toyproject.bookmanagement.repository.BookRepository">
    <resultMap type="com.toyproject.bookmanagement.domain.entity.book.Book" id="bookMap">
        <id property="bookId" column="book_id"/>
        <result property="bookName" column="book_name"/>
        <result property="authorId" column="author_id"/>
        <result property="publisherId" column="publisher_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="coverImgUrl" column="cover_img_url"/>
        <result property="likeCount" column="like_count" />
        <association property="author" resultMap="authorMap"/>
        <association property="publisher" resultMap="publisherMap"/>
        <association property="category" resultMap="categoryMap"/>
    </resultMap>

    <resultMap type="com.toyproject.bookmanagement.domain.entity.book.Author" id="authorMap">
        <id property="authorId" column="author_id"/>
        <result property="authorName" column="author_name"/>
    </resultMap>

    <resultMap type="com.toyproject.bookmanagement.domain.entity.book.Publisher" id="publisherMap">
        <id property="publisherId" column="publisher_id"/>
        <result property="publisherName" column="publisher_name"/>
    </resultMap>

    <resultMap type="com.toyproject.bookmanagement.domain.entity.book.Category" id="categoryMap" >
        <id property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name"/>
    </resultMap>

    <select id="getBook" parameterType="Integer" resultMap="bookMap">
        SELECT
            bt.book_id,
            bt.book_name,
            bt.author_id,
            bt.publisher_id,
            bt.category_id,
            bt.cover_img_url,

            at.author_id,
            at.author_name,

            pt.publisher_id,
            pt.publisher_name,

            ct.category_id,
            ct.category_name
        FROM
            book_tb bt
            LEFT OUTER JOIN author_tb at ON(at.author_id = bt.author_id)
            LEFT OUTER JOIN publisher_tb pt ON(pt.publisher_id = bt.publisher_id)
            LEFT OUTER JOIN category_tb ct ON(ct.category_id = bt.category_id)
        WHERE
            bt.book_id = #{bookId}
    </select>

    <select id="getBookList" parameterType="hashmap" resultMap="bookMap">
        SELECT
            bt.book_id,
            bt.book_name,
            bt.author_id,
            bt.publisher_id,
            bt.category_id,
            bt.cover_img_url,

            lc.like_count,

            at.author_id,
            at.author_name,

            pt.publisher_id,
            pt.publisher_name,

            ct.category_id,
            ct.category_name
        FROM
            book_tb bt
            LEFT OUTER JOIN author_tb at ON(at.author_id = bt.author_id)
            LEFT OUTER JOIN publisher_tb pt ON(pt.publisher_id = bt.publisher_id)
            LEFT OUTER JOIN category_tb ct ON(ct.category_id = bt.category_id)
            LEFT OUTER JOIN (SELECT book_id, count(*) AS like_count FROM book_like_tb GROUP BY book_id) lc ON(lc.book_id = bt.book_id)
        WHERE
            1 = 1

            <if test="categoryIds != null">
                AND bt.category_id IN
                <foreach collection="categoryIds" item="categoryId" open="(" separator="," close=")">
                    #{categoryId}
                </foreach>
            </if>


            AND bt.book_name LIKE CONCAT("%", #{searchValue}, "%")

        ORDER BY
            bt.book_id
        LIMIT #{index}, 20;
    </select>

    <select id="getTotalCount" parameterType="hashmap" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            book_tb bt
            LEFT OUTER JOIN author_tb at ON(at.author_id = bt.author_id)
            LEFT OUTER JOIN publisher_tb pt ON(pt.publisher_id = bt.publisher_id)
            LEFT OUTER JOIN category_tb ct ON(ct.category_id = bt.category_id)
        WHERE
            1 = 1
            <if test="categoryIds != null">
                AND bt.category_id IN
                <foreach collection="categoryIds" item="categoryId" open="(" separator="," close=")">
                    #{categoryId}
                </foreach>
            </if>

            AND bt.book_name LIKE CONCAT("%", #{searchValue}, "%")

    </select>

    <select id="getCategoryList" resultMap="categoryMap">
        SELECT
            category_id,
            category_name
        FROM
            category_tb
    </select>

    <select id="getLikeCount" parameterType="Integer" resultType="Integer">
        SELECT
            count(*)
        FROM
            book_like_tb
        WHERE
            book_id = #{bookId}
    </select>

    <select id="getLikeStatus" parameterType="hashmap" resultType="Integer">
        SELECT
            count(*)
        FROM
            book_like_tb
        WHERE
            book_id = #{bookId}
        and member_id = #{memberId}
    </select>

    <insert id="setLike" >
        INSERT INTO book_like_tb
        VALUES (0, #{bookId}, #{memberId})
    </insert>

    <delete id="disLike" >
        DELETE
        FROM
            book_like_tb
        WHERE
            book_id = #{bookId}
        and member_id = #{memberId}
    </delete>

    <select id="getRentalList" parameterType="Integer" resultType="com.toyproject.bookmanagement.domain.entity.book.RentalList">
        SELECT
            blt.book_list_id AS bookListId,
            bt.book_name AS bookName,
            brt.member_id AS memberId

        FROM
            book_list_tb blt
            LEFT OUTER JOIN book_tb bt ON(bt.book_id = blt.book_id)
            LEFT OUTER JOIN book_rental_tb brt ON(brt.book_list_id = blt.book_list_id)
        WHERE
            bt.book_id = #{bookId}
    </select>

    <insert id="rentalBook">

    </insert>

    <delete id="returnBook">
    
    </delete>
</mapper>